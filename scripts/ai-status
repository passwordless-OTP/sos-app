#!/bin/bash
# AI Agent Status Check - Quick project overview

echo "🤖 SOS Project Status Check"
echo "=========================="
echo ""

# Date and week calculation
START_DATE="2025-01-13"
TODAY=$(date +%Y-%m-%d)

# macOS compatible date calculation
if [[ "$OSTYPE" == "darwin"* ]]; then
    START_EPOCH=$(date -j -f "%Y-%m-%d" "$START_DATE" +%s)
    TODAY_EPOCH=$(date +%s)
else
    START_EPOCH=$(date -d "$START_DATE" +%s)
    TODAY_EPOCH=$(date -d "$TODAY" +%s)
fi

DAYS_SINCE_START=$(( (TODAY_EPOCH - START_EPOCH) / 86400 ))
CURRENT_WEEK=$(( (DAYS_SINCE_START / 7) + 1 ))

echo "📅 Timeline"
echo "-----------"
echo "Start Date: $START_DATE"
echo "Today: $TODAY"
echo "Current Week: $CURRENT_WEEK of 8"
echo ""

# Repository check
echo "📁 Repositories"
echo "--------------"
echo -n "SOS (docs/infra): "
git remote get-url origin 2>/dev/null | grep -q "SOS.git" && echo "✓ Current repo" || echo "✗ Not in SOS"

echo -n "sos-app (Shopify): "
if [ -d "apps/sosv02/apps/sosv02" ]; then
    echo "✓ Submodule present"
else
    echo "✗ Missing (run: git submodule update --init)"
fi
echo ""

# Active work
echo "🔄 Active Work"
echo "--------------"
CURRENT_BRANCH=$(git branch --show-current)
echo "Current Branch: $CURRENT_BRANCH"

# Open PRs
echo ""
echo "Open PRs:"
gh pr list --state open --json number,title,author --jq '.[] | "  PR #\(.number): \(.title) (@\(.author.login))"' 2>/dev/null || echo "  No open PRs"

# Assigned issues
echo ""
echo "Your Assigned Issues:"
gh issue list --assignee @me --state open --json number,title,repository --jq '.[] | "  #\(.number): \(.title) (\(.repository.name))"' 2>/dev/null | head -5

echo ""
echo "📊 Progress Overview"
echo "-------------------"

# Count completed vs total
CLOSED_ISSUES_APP=$(gh issue list --repo passwordless-OTP/sos-app --state closed --json number --jq '. | length' 2>/dev/null || echo 0)
CLOSED_ISSUES_SOS=$(gh issue list --repo passwordless-OTP/SOS --state closed --json number --jq '. | length' 2>/dev/null || echo 0)
OPEN_ISSUES_APP=$(gh issue list --repo passwordless-OTP/sos-app --state open --json number --jq '. | length' 2>/dev/null || echo 0)
OPEN_ISSUES_SOS=$(gh issue list --repo passwordless-OTP/SOS --state open --json number --jq '. | length' 2>/dev/null || echo 0)

TOTAL_CLOSED=$((CLOSED_ISSUES_APP + CLOSED_ISSUES_SOS))
TOTAL_OPEN=$((OPEN_ISSUES_APP + OPEN_ISSUES_SOS))
TOTAL_ISSUES=$((TOTAL_CLOSED + TOTAL_OPEN))

if [ $TOTAL_ISSUES -gt 0 ]; then
    PROGRESS=$((TOTAL_CLOSED * 100 / TOTAL_ISSUES))
    echo "Issues Completed: $TOTAL_CLOSED / $TOTAL_ISSUES ($PROGRESS%)"
    
    # Progress bar
    FILLED=$((PROGRESS / 6))
    EMPTY=$((16 - FILLED))
    printf "Overall Progress: ["
    printf "%${FILLED}s" | tr ' ' '█'
    printf "%${EMPTY}s" | tr ' ' '░'
    printf "] $PROGRESS%%\n"
fi

echo ""
echo "🎯 Current Priorities"
echo "--------------------"
echo "1. Multi-source fraud API integration (#3)"
echo "2. Fix TypeScript errors (#9)"
echo "3. Configure API accounts (#2)"

echo ""
echo "📋 Quick Commands"
echo "-----------------"
echo "See all tasks:        ./scripts/task list"
echo "Start an issue:       ./scripts/task start <number>"
echo "Switch tasks:         ./scripts/task switch <number>"
echo "View project board:   gh project view 7 --owner passwordless-OTP --web"
echo "Update timeline:      vi docs/TIMELINE_STATUS.md"

echo ""
echo "📖 Documentation"
echo "---------------"
echo "Full AI instructions: cat AI_PROJECT_MANAGER.md"
echo "Project timeline:     cat docs/TIMELINE_STATUS.md"
echo "Development guide:    cat docs/DEVELOPMENT_WORKFLOW.md"

echo ""
echo "✨ Tip: Run this command anytime to get oriented!"