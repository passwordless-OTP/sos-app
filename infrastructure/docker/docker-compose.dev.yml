version: '3.8'

services:
  # Main application
  app:
    build: 
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.dev
    container_name: sos-app-dev
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugging
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://sos_user:sos_password@postgres:5432/sos_store_db
    env_file:
      - ../../.env
    depends_on:
      - redis
      - postgres
    volumes:
      - ../../apps:/app/apps
      - ../../packages:/app/packages
      - ../../services:/app/services
    command: npm run dev
    networks:
      - sos-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: sos-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sos-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: sos-postgres-dev
    environment:
      - POSTGRES_USER=sos_user
      - POSTGRES_PASSWORD=sos_password
      - POSTGRES_DB=sos_store_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sos-network

  # Redis Commander for debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sos-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - sos-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sos-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@sos.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8082:80"
    depends_on:
      - postgres
    networks:
      - sos-network

networks:
  sos-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: